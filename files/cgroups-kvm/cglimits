#!/bin/bash
##
# Project Jarvis Cgroups KVM Limits
# Copyright (C) 2017, Nexcess.net LLC <rmacdonald@nexcess.net>
#               2017, Ryan MacDonald <ryan@rfxn.com>
##
export PATH=/sbin:/bin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin

# installation path
inspath=/data/cgroups-kvm

# source our functions file
source $inspath/functions

# vm based resource rules path
rules=$inspath/rules

# cglimits log file
logf=$inspath/log.cglimits

# temporary file
tmpf="/var/tmp/.cglimits.$$"

# global resource limits defined at
. $rules/global

if [ "$1" ]; then
        nolog=1
fi

eout() {
 arg=$1
 ver=$2
 if [ "$nolog" == "1" ]; then
        ver=0
 fi
 appn=cglimits
 if [ "$arg" ]; then
        if [ -z "$nolog" ]; then
                echo "$(date +"%b %d %H:%M:%S") $(hostname -s) $appn($$): $arg" >> $logf
                if [ "$ver" == "1" ]; then
                        echo "$appn($$): $arg"
                fi
        fi
 fi
}

if [ ! -d "/cgroup" ] && [ ! -d "/sys/fs/cgroup" ]; then
        eout "could not find cgroup file system mounted, aborting!" 1
        exit 1
fi

if [ ! -f "/etc/init.d/cgred" ] && [ ! -f "/usr/lib/systemd/system/cgred.service" ]; then
        eout "could not find cgred service installed, aborting!" 1
        exit 1
fi

vnum=`virsh list --name | wc -l`
if [ "$vnum" -le "1" ]; then
        eout "no instances running" 1
        exit
fi

cgrd=`pidof cgrulesengd`
if [ -z "$cgrd" ]; then
        eout "started cgred service" 1
        if [ -f "/etc/init.d/cgred" ]; then
                /etc/init.d/cgred start
        elif [ -f "/usr/lib/systemd/system/cgred.service" ]; then
                systemctl start cgred.service
        fi
        cgrd=`pidof cgrulesengd`
        if [ -z "$cgrd" ]; then
                eout "could not start cgrules engine service, aborting!" 1
                exit 1
        else
                eout "cgred service running: $cgrd" 1
        fi
else
        eout "cgred service running: $cgrd" 1
fi

if [ -d "/cgroup" ]; then
        cgroup_path="/cgroup"
elif [ -d "/sys/fs/cgroup" ]; then
        cgroup_path="/sys/fs/cgroup"
fi


# fetch cpustats for virtual machines
update_cpustats
diff_cpustats

# grab hvm load average and top usage instances
hvmload=`cat /proc/loadavg | cut -d'.' -f1`
/usr/bin/top -c -b -n 1 | grep -E "qemu-kvm" | awk '{print$14,$1,$9}' > $tmpf.top

cgsnap="$tmpf.cgsnap$$"
/bin/cgsnapshot -s > $cgsnap

. $rules/global
/usr/bin/renice -n $prio_cpunice $(pgrep "qemu-kvm|vhost") >> /dev/null
/usr/bin/ionice -c 2 -n $prio_ionice -p $(pgrep "qemu-kvm|vhost") >> /dev/null

default_cpunice="$prio_cpunice"
default_ionice="$prio_ionice"

if [ "$hvmload" -ge "20" ]; then
        global_reduce_factor="0.75"
elif [ "$hvmload" -ge "30" ]; then
        global_reduce_factor="0.50"
fi

for vid in `/usr/bin/virsh list --name | grep -vE "^$"`; do
 if [ "$vid" ]; then
        # reimport global values
        . $rules/global
        if [ -f "$rules/$vid" ]; then
                . $rules/$vid
                vpid=`pgrep -f $vid`
                if [ "$vpid" ]; then
                 if [ ! "$prio_cpunice" == "$default_cpunice" ]; then
                        eout "set instance $vid cpunice priority to $prio_cpunice" 1
                        /usr/bin/renice -n $prio_cpunice $vpid >> /dev/null
                 fi
                 if [ ! "$prio_ionice" == "$default_ionice" ]; then
                        eout "set instance $vid ionice priority to $prio_ionice" 1
                        /usr/bin/ionice -c 2 -n $prio_ionice -p $vpid >> /dev/null
                 fi
                fi
        else
                . $rules/global
        fi
        if [ "$(echo $HOSTNAME | egrep '^hn|^dal1.hn')" ]; then

                increase_factor="1.30"

                blkio_mbps_read=`echo "$blkio_mbps_read * $increase_factor" | bc | cut -d'.' -f1`
                blkio_mbps_write=`echo "$blkio_mbps_write * $increase_factor" | bc | cut -d'.' -f1`
                blkio_iops_read=`echo "$blkio_iops_read * $increase_factor" | bc | cut -d'.' -f1`
                blkio_iops_write=`echo "$blkio_iops_write * $increase_factor" | bc | cut -d'.' -f1`

                unset increase_factor
        fi

        if [ "$global_reduce_factor" ] || [ "$reduce_factor" ]; then
                if [ "$global_reduce_factor" ]; then
                        reduce_factor="$global_reduce_factor"
                fi
                blkio_mbps_read=`echo "$blkio_mbps_read * $reduce_factor" | bc | cut -d'.' -f1`
                blkio_mbps_write=`echo "$blkio_mbps_write * $reduce_factor" | bc | cut -d'.' -f1`
                blkio_iops_read=`echo "$blkio_iops_read * $reduce_factor" | bc | cut -d'.' -f1`
                blkio_iops_write=`echo "$blkio_iops_write * $reduce_factor" | bc | cut -d'.' -f1`

                unset reduce_factor
        fi

        devs=`cat $cgsnap | grep $vid -A 4 | sed 's/="/\n/'| grep -E "^b.*rw$" | awk '{print$2}' | tr '\n' ',' | sed '$s/.$//'`
        for dev in `echo $devs | tr ',' '\n'`; do
                eout "set instance $vid read rate limit to ${blkio_mbps_read} MB/s on device $dev/san${san}" 1
                echo "$dev $(echo "scale=0;$blkio_mbps_read * 1024 * 1024" | bc)" > $cgroup_path/blkio/libvirt/qemu/$vid/blkio.throttle.read_bps_device

                eout "set instance $vid write rate limit to ${blkio_mbps_write} MB/s on device $dev/san${san}" 1
                echo "$dev $(echo "scale=0;$blkio_mbps_write * 1024 * 1024" | bc)" > $cgroup_path/blkio/libvirt/qemu/$vid/blkio.throttle.write_bps_device

                eout "set instance $vid read io limit to ${blkio_iops_read} IO/s on device $dev/san${san}" 1
                echo "$dev $blkio_iops_read" > $cgroup_path/blkio/libvirt/qemu/$vid/blkio.throttle.read_iops_device

                eout "set instance $vid write io limit to ${blkio_iops_write} IO/s on device $dev/san${san}" 1
                echo "$dev $blkio_iops_write" > $cgroup_path/blkio/libvirt/qemu/$vid/blkio.throttle.write_iops_device
        done
 fi
done

if [ "$hvmload" -ge "8" ]; then
        # set reduced cpu/io nice priority for top lifetime cpu usage instances
        # exclude vip instances, we will handle these if they trend high usage
        if [ -f "$cpufile" ]; then
         for pid in `cat $cpufile | grep -wv vip | sort -n -k3 | tail -n3 | awk '{print$1}'`; do
                vid=`grep -w $pid $cpufile | awk '{print$2}'`
                eout "setting reduced cpu($prio_top_cpunice)/io($prio_top_ionice) nice priority on top lifetime cpu usage instance: $vid" 1
                /usr/bin/renice -n $prio_top_cpunice $pid >> /dev/null
                /usr/bin/ionice -c 2 -n $prio_top_ionice -p $pid >> /dev/null
         done
        fi

        # set reduced cpu/io nice priority for current trending top usage instances
        for i in `cat $tmpf.top | sort -k3 -n | tail -n$prio_top_procs | awk '{print$1,$2}' | sort | uniq | tr ' ' '%'`; do
                prio_top_cpunice="6"
                prio_top_ionice="4"
                vid=`echo $i | cut -d'%' -f1`
                pid=`echo $i | cut -d'%' -f2`
                if [ -f "/data/cgroups-kvm/rules/$vid" ]; then
                        . /data/cgroups-kvm/rules/$vid
                fi
                if [ "$isvip" ]; then
                        prio_top_cpunice="2"
                        prio_top_ionice="2"
                fi
                eout "setting reduced cpu($prio_top_cpunice)/io($prio_top_ionice) nice priority on top trending cpu usage instance: $vid" 1
                /usr/bin/renice -n $prio_top_cpunice $pid >> /dev/null
                /usr/bin/ionice -c 2 -n $prio_top_ionice -p $pid >> /dev/null
                unset isvip vip
        done
        if [ -f "$cpufile" ]; then
         prio_top_cpunice="6"
         prio_top_ionice="4"
         prio="$prio_top_cpunice"
         for pid in `cat $cpufile.diff | sort -n -k3 | tail -n3 | awk '{print$1}'`; do
                vid=`grep -w $pid $cpufile | awk '{print$2}'`
                if [ -f "/data/cgroups-kvm/rules/$vid" ]; then
                        . /data/cgroups-kvm/rules/$vid
                fi
                prio=$[prio+1]
                if [ "$prio" -ge "18" ]; then
                        prio=18
                fi
                if [ "$isvip" ]; then
                        prio_top_cpunice="3"
                        prio_top_ionice="3"
                else
                        prio_top_cpunice="$prio"
                fi
                eout "setting reduced cpu($prio_top_cpunice)/io($prio_top_ionice) nice priority on top trending cpu usage instance: $vid" 1
                /usr/bin/renice -n $prio_top_cpunice $pid >> /dev/null
                /usr/bin/ionice -c 2 -n $prio_top_ionice -p $pid >> /dev/null
                unset isvip vip
         done
        fi


fi

rm -f $tmpf.top $tmpf.cpulifetime $cgsnap

